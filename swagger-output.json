{
  "openapi": "3.0.0",
  "info": {
    "title": "PetJoyful API",
    "version": "1.0.0",
    "description": "API documentation for PetJoyful backend"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "nome": { "type": "string" },
          "email": { "type": "string" },
          "senha": { "type": "string" },
          "tipo": {
            "type": "string",
            "enum": ["adotante", "ong", "veterinario"]
          }
        },
        "required": ["nome", "email", "senha", "tipo"]
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" }
        },
        "security": []
      },
      "get": {
        "summary": "Register (GET) - create a user via query params (documentation only)",
        "parameters": [
          { "name": "nome", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "email", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "senha", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "tipo", "in": "query", "required": true, "schema": { "type": "string", "enum": ["adotante", "ong", "veterinario"] } }
        ],
        "responses": { "201": { "description": "User created" } },
        "security": []
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login and receive a JWT token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "senha": { "type": "string" }
                },
                "required": ["email", "senha"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Token" } },
        "security": []
      },
      "get": {
        "summary": "Login (GET) - returns a JWT token (query params)",
        "parameters": [
          { "name": "email", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "senha", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Token" } },
        "security": []
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get authenticated user's profile",
        "responses": {
          "200": { "description": "User profile" },
          "401": { "description": "Unauthorized" }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "put": {
        "summary": "Update authenticated user's profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": { "type": "string" },
                  "email": { "type": "string" },
                  "senha": { "type": "string" },
                  "tipo": { "type": "string", "enum": ["adotante", "ong", "veterinario"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Profile updated" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete authenticated user's account",
        "responses": {
          "200": { "description": "Account deleted" },
          "401": { "description": "Unauthorized" }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/users": {
      "get": {
        "summary": "List all users",
        "responses": { "200": { "description": "List of users" } },
        "security": [{ "BearerAuth": [] }]
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": { "201": { "description": "User created" } },
        "security": []
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "put": {
        "summary": "Update user by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": { "type": "string" },
                  "email": { "type": "string" },
                  "senha": { "type": "string" },
                  "tipo": { "type": "string", "enum": ["adotante", "ong", "veterinario"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "BearerAuth": [] }]
      },
      "delete": {
        "summary": "Delete user by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "BearerAuth": [] }]
      }
    }
  }
}
