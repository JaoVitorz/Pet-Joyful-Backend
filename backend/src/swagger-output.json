{
  "openapi": "3.0.0",
  "info": {
    "title": "Pet Joyful API",
    "version": "1.0.0",
    "description": "Documentação completa da **API Pet Joyful** — gerenciamento de usuários, autenticação, mensagens e denúncias."
  },
  "servers": [
    {
      "url": "https://petjoyful-backend.vercel.app",
      "description": "Servidor de produção"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Insira o token JWT no formato **Bearer {token}**"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["nome", "email", "senha"],
        "properties": {
          "nome": {
            "type": "string",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "example": "joao@email.com"
          },
          "senha": {
            "type": "string",
            "example": "123456"
          },
          "tipo": {
            "type": "string",
            "example": "cliente"
          }
        }
      },
      "Login": {
        "type": "object",
        "required": ["email", "senha"],
        "properties": {
          "email": {
            "type": "string",
            "example": "joao@email.com"
          },
          "senha": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": ["nome", "email", "mensagem"],
        "properties": {
          "nome": {
            "type": "string",
            "example": "Maria"
          },
          "email": {
            "type": "string",
            "example": "maria@email.com"
          },
          "mensagem": {
            "type": "string",
            "example": "Gostei do post!"
          },
          "postId": {
            "type": "string",
            "example": "65b8d7b2b9e"
          }
        }
      },
      "Report": {
        "type": "object",
        "required": ["descricao", "alvoId", "alvoTipo"],
        "properties": {
          "nome": {
            "type": "string",
            "example": "Carlos"
          },
          "email": {
            "type": "string",
            "example": "carlos@email.com"
          },
          "descricao": {
            "type": "string",
            "example": "Conteúdo ofensivo detectado"
          },
          "alvoId": {
            "type": "string",
            "example": "123abc456"
          },
          "alvoTipo": {
            "type": "string",
            "example": "mensagem"
          }
        }
      }
    }
  },

  "security": [{ "BearerAuth": [] }],

  "tags": [
    { "name": "Auth", "description": "Autenticação e gerenciamento de sessão do usuário" },
    { "name": "Users", "description": "Operações relacionadas a usuários" },
    { "name": "Messages", "description": "Mensagens e comentários em postagens" },
    { "name": "Reports", "description": "Denúncias e moderação de conteúdo" }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Registrar novo usuário",
        "description": "Cria uma nova conta de usuário na plataforma.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário criado com sucesso" },
          "400": { "description": "Erro de validação" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login do usuário",
        "description": "Autentica o usuário e retorna o token JWT para uso nas rotas protegidas.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Login" }
            }
          }
        },
        "responses": {
          "200": { "description": "Login realizado com sucesso" },
          "400": { "description": "Credenciais inválidas" },
          "401": { "description": "Não autorizado" }
        }
      }
    },

    "/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Obter dados do usuário autenticado",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "Usuário autenticado retornado" },
          "401": { "description": "Token inválido ou ausente" }
        }
      },
      "put": {
        "tags": ["Auth"],
        "summary": "Atualizar dados do usuário autenticado",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": { "description": "Dados atualizados com sucesso" },
          "400": { "description": "Erro de validação" },
          "401": { "description": "Token inválido" }
        }
      },
      "delete": {
        "tags": ["Auth"],
        "summary": "Excluir conta do usuário autenticado",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "Conta excluída com sucesso" },
          "401": { "description": "Token inválido" }
        }
      }
    },

    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Listar todos os usuários",
        "responses": {
          "200": { "description": "Lista de usuários retornada" },
          "500": { "description": "Erro interno" }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Criar novo usuário (admin)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário criado com sucesso" },
          "400": { "description": "Erro de validação" }
        }
      }
    },

    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Buscar usuário por ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Usuário encontrado" },
          "404": { "description": "Usuário não encontrado" }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Atualizar usuário por ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": { "description": "Usuário atualizado" },
          "404": { "description": "Usuário não encontrado" }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Excluir usuário por ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Usuário excluído" },
          "404": { "description": "Usuário não encontrado" }
        }
      }
    },

    "/messages/post": {
      "post": {
        "tags": ["Messages"],
        "summary": "Enviar mensagem em um post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Message" }
            }
          }
        },
        "responses": {
          "201": { "description": "Mensagem criada com sucesso" },
          "400": { "description": "Erro de validação" }
        }
      },
      "get": {
        "tags": ["Messages"],
        "summary": "Listar todas as mensagens",
        "responses": {
          "200": { "description": "Mensagens retornadas" }
        }
      }
    },

    "/messages/denuncia": {
      "post": {
        "tags": ["Reports"],
        "summary": "Criar nova denúncia",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Report" }
            }
          }
        },
        "responses": {
          "201": { "description": "Denúncia registrada com sucesso" },
          "400": { "description": "Erro nos dados enviados" }
        }
      },
      "get": {
        "tags": ["Reports"],
        "summary": "Listar todas as denúncias",
        "responses": {
          "200": { "description": "Lista de denúncias retornada" }
        }
      }
    }
  }
}
